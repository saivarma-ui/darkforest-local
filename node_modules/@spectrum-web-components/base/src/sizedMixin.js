import { __decorate } from "tslib";
import { property } from 'lit/decorators.js';
export function SizedMixin(constructor, { validSizes = ['s', 'm', 'l', 'xl'], noDefaultSize, defaultSize = 'm', } = {}) {
    class SizedElement extends constructor {
        constructor() {
            super(...arguments);
            this._size = defaultSize;
        }
        get size() {
            return this._size || defaultSize;
        }
        set size(value) {
            const fallbackSize = noDefaultSize ? null : defaultSize;
            const size = (value ? value.toLocaleLowerCase() : value);
            const validSize = (validSizes.includes(size) ? size : fallbackSize);
            if (validSize) {
                this.setAttribute('size', validSize);
            }
            if (this._size === validSize) {
                return;
            }
            const oldSize = this._size;
            this._size = validSize;
            this.requestUpdate('size', oldSize);
        }
        firstUpdated(changes) {
            super.firstUpdated(changes);
            if (!this.hasAttribute('size') && !noDefaultSize) {
                this.setAttribute('size', this.size);
            }
        }
    }
    __decorate([
        property({ type: String, reflect: true })
    ], SizedElement.prototype, "size", null);
    return SizedElement;
}
//# sourceMappingURL=sizedMixin.js.map