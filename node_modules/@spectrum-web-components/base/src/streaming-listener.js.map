{"version":3,"file":"streaming-listener.js","sourceRoot":"","sources":["streaming-listener.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { ElementPart, nothing, Part } from 'lit';\nimport { AsyncDirective, directive } from 'lit/async-directive.js';\nimport type { DirectiveResult } from 'lit/directive.js';\n\ntype ListenerConfig = [string | string[], (event?: any) => void];\ntype ListenerConfigGroup = {\n    start: ListenerConfig;\n    end: ListenerConfig;\n    streamInside?: ListenerConfig;\n    streamOutside?: ListenerConfig;\n};\n\n/* c8 ignore next 6 */\nconst defaultListener: ListenerConfig = [\n    '',\n    (): void => {\n        return;\n    },\n];\n\n/**\n * Performantly manage listening to event in a series, like:\n *   - `input[type=\"range\"]`: input, input, etc. => change\n *   - `sp-color-area`: pointerdown => pointermove, pointermove, etc. => pointerup\n * Lazily bind events to the specific part of the series while\n * throttling streamed events to 1/frame.\n */\nclass StreamingListenerDirective extends AsyncDirective {\n    host!: EventTarget | Record<string, unknown> | Element;\n    element!: Element;\n\n    start: ListenerConfig = defaultListener;\n    streamInside: ListenerConfig = defaultListener;\n    end: ListenerConfig = defaultListener;\n    streamOutside: ListenerConfig = defaultListener;\n\n    state: 'off' | 'on' = 'off';\n\n    /* c8 ignore next 4 */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    render(_configGroup: ListenerConfigGroup): typeof nothing {\n        return nothing;\n    }\n\n    update(\n        part: Part,\n        [\n            {\n                start,\n                end,\n                streamInside = defaultListener,\n                streamOutside = defaultListener,\n            },\n        ]: Parameters<this['render']>\n    ): void {\n        if (this.element !== (part as ElementPart).element) {\n            this.element = (part as ElementPart).element;\n            this.removeListeners();\n        }\n        this.host =\n            (part.options?.host as Record<string, unknown>) || this.element;\n        this.start = start;\n        this.end = end;\n        this.streamInside = streamInside;\n        this.streamOutside = streamOutside;\n        this.addListeners();\n    }\n\n    addListeners(state?: 'on' | 'off'): void {\n        this.state = state || this.state;\n        if (this.state === 'off') {\n            this.addListener(this.streamOutside[0], this.handleBetween);\n            this.addListener(this.start[0], this.handleStart);\n        } else if (this.state === 'on') {\n            this.addListener(this.streamInside[0], this.handleStream);\n            this.addListener(this.end[0], this.handleEnd);\n        }\n    }\n\n    callHandler(\n        value: (event: Event) => void | EventListenerObject,\n        event: Event\n    ): void {\n        if (typeof value === 'function') {\n            (value as (event: Event) => void).call(this.host, event);\n        } else {\n            (value as EventListenerObject).handleEvent(event);\n        }\n    }\n\n    handleStart = (event: Event): void => {\n        this.callHandler(this.start[1], event);\n        if (event.defaultPrevented) {\n            return;\n        }\n        this.removeListeners();\n        this.addListeners('on');\n    };\n\n    handleStream = (event: Event): void => {\n        this.callHandler(this.streamInside[1], event);\n    };\n\n    handleEnd = (event: Event): void => {\n        this.callHandler(this.end[1], event);\n        this.removeListeners();\n        this.addListeners('off');\n    };\n\n    handleBetween = (event: Event): void => {\n        this.callHandler(this.streamOutside[1], event);\n    };\n\n    addListener(type: string | string[], fn: (event: Event) => void): void {\n        if (Array.isArray(type)) {\n            type.map((eventName) => {\n                this.element.addEventListener(eventName, fn);\n            });\n        } else {\n            this.element.addEventListener(type, fn);\n        }\n    }\n\n    removeListener(type: string | string[], fn: (event: Event) => void): void {\n        if (Array.isArray(type)) {\n            type.map((eventName) => {\n                this.element.removeEventListener(eventName, fn);\n            });\n        } else {\n            this.element.removeEventListener(type, fn);\n        }\n    }\n\n    removeListeners(): void {\n        this.removeListener(this.start[0], this.handleStart);\n        this.removeListener(this.streamInside[0], this.handleStream);\n        this.removeListener(this.end[0], this.handleEnd);\n        this.removeListener(this.streamOutside[0], this.handleBetween);\n    }\n\n    disconnected(): void {\n        this.removeListeners();\n    }\n\n    reconnected(): void {\n        this.addListeners();\n    }\n}\n\nexport const streamingListener: (\n    _configGroup: ListenerConfigGroup\n) => DirectiveResult<typeof StreamingListenerDirective> = directive(\n    StreamingListenerDirective\n);\n\n/**\n * The type of the class that powers this directive. Necessary for naming the\n * directive's return type.\n */\nexport type { StreamingListenerDirective };\n"]}