{"version":3,"file":"button-primary.stories.js","sourceRoot":"","sources":["button-primary.stories.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;EAUE;AACF,OAAO,EAAE,IAAI,EAAkB,MAAM,+BAA+B,CAAC;AACrE,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,MAAM,YAAY,CAAC;AACvD,OAAO,+DAA+D,CAAC;AAEvE,eAAe;IACX,SAAS,EAAE,WAAW;IACtB,KAAK,EAAE,gBAAgB;IACvB,IAAI,EAAE;QACF,QAAQ,EAAE,KAAK;QACf,KAAK,EAAE,KAAK;QACZ,OAAO,EAAE,SAAS;KACrB;IACD,QAAQ,EAAE;QACN,QAAQ,EAAE;YACN,IAAI,EAAE,UAAU;YAChB,IAAI,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE;YAC1C,WAAW,EACP,4DAA4D;YAChE,KAAK,EAAE;gBACH,IAAI,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE;gBAC5B,YAAY,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;aACnC;YACD,OAAO,EAAE;gBACL,IAAI,EAAE,SAAS;aAClB;SACJ;QACD,KAAK,EAAE;YACH,IAAI,EAAE,OAAO;YACb,IAAI,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE;YAC1C,KAAK,EAAE;gBACH,IAAI,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE;gBAC5B,YAAY,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;aACnC;YACD,OAAO,EAAE;gBACL,IAAI,EAAE,SAAS;aAClB;SACJ;QACD,OAAO,EAAE;YACL,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE;YACzC,WAAW,EAAE,4CAA4C;YACzD,KAAK,EAAE;gBACH,IAAI,EAAE,EAAE,OAAO,EAAE,QAAQ,EAAE;gBAC3B,YAAY,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;aACnC;YACD,OAAO,EAAE;gBACL,IAAI,EAAE,cAAc;gBACpB,OAAO,EAAE;oBACL,KAAK;oBACL,SAAS;oBACT,WAAW;oBACX,UAAU;oBACV,gBAAgB;iBACnB;aACJ;SACJ;KACJ;CACJ,CAAC;AAEF,MAAM,OAAO,GAAG,SAAS,CAAC;AAS1B,MAAM,CAAC,MAAM,OAAO,GAAG,CAAC,KAAiB,EAAkB,EAAE,CACzD,eAAe,CAAC,KAAK,CAAC,CAAC;AAE3B,MAAM,CAAC,MAAM,KAAK,GAAG,CAAC,KAAiB,EAAkB,EAAE,CACvD,eAAe,CAAC,KAAK,CAAC,CAAC;AAC3B,KAAK,CAAC,IAAI,GAAG;IACT,KAAK,EAAE,IAAI;CACd,CAAC;AAEF,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAC,KAAiB,EAAkB,EAAE;IAC1D,OAAO,IAAI,CAAA;;;;;;;cAOD,eAAe,iCACV,KAAK,KACR,OAAO,EAAE,IAAI,CAAA;;;iBAGZ,IACH;;;cAGA,eAAe,iCACV,KAAK,KACR,OAAO,EAAE,IAAI,CAAA;sBACP,QAAQ;iBACb,IACH;;KAET,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,kBAAkB,GAAG,GAAmB,EAAE;IACnD,OAAO,IAAI,CAAA;oDACqC,OAAO;;;;;;;;;KAStD,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,KAAiB,EAAkB,EAAE;IAChE,OAAO,IAAI,CAAA;;;;;;UAML,eAAe,CAAC,KAAK,CAAC;KAC3B,CAAC;AACN,CAAC,CAAC;AACF,cAAc,CAAC,KAAK,GAAG;IACnB,IAAI,EAAE,WAAW;CACpB,CAAC;AAEF,MAAM,IAAI,GAAG,kDAAkD,CAAC;AAEhE,MAAM,CAAC,MAAM,IAAI,GAAG,CAAC,KAAiB,EAAkB,EAAE,CACtD,eAAe,iCACR,KAAK,KACR,IAAI,IACN,CAAC;AACP,IAAI,CAAC,KAAK,GAAG;IACT,IAAI,EAAE,MAAM;CACf,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,KAAiB,EAAkB,EAAE,CAChE,eAAe,iCACR,KAAK,KACR,IAAI,EACJ,MAAM,EAAE,QAAQ,IAClB,CAAC;AACP,cAAc,CAAC,KAAK,GAAG;IACnB,IAAI,EAAE,2BAA2B;CACpC,CAAC","sourcesContent":["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport { html, TemplateResult } from '@spectrum-web-components/base';\nimport { bellIcon, renderButtonSet } from './index.js';\nimport '@spectrum-web-components/icons-workflow/icons/sp-icon-help.js';\n\nexport default {\n    component: 'sp-button',\n    title: 'Button/Primary',\n    args: {\n        disabled: false,\n        quiet: false,\n        variant: 'primary',\n    },\n    argTypes: {\n        disabled: {\n            name: 'disabled',\n            type: { name: 'boolean', required: false },\n            description:\n                'Disable this control. It will not receive focus or events.',\n            table: {\n                type: { summary: 'boolean' },\n                defaultValue: { summary: false },\n            },\n            control: {\n                type: 'boolean',\n            },\n        },\n        quiet: {\n            name: 'quiet',\n            type: { name: 'boolean', required: false },\n            table: {\n                type: { summary: 'boolean' },\n                defaultValue: { summary: false },\n            },\n            control: {\n                type: 'boolean',\n            },\n        },\n        variant: {\n            name: 'variant',\n            type: { name: 'string', required: false },\n            description: 'The visual variant to apply to the button.',\n            table: {\n                type: { summary: 'string' },\n                defaultValue: { summary: 'cta' },\n            },\n            control: {\n                type: 'inline-radio',\n                options: [\n                    'cta',\n                    'primary',\n                    'secondary',\n                    'negative',\n                    'overBackground',\n                ],\n            },\n        },\n    },\n};\n\nconst variant = 'primary';\n\ninterface Properties {\n    content?: TemplateResult;\n    disabled?: boolean;\n    quiet?: boolean;\n    variant?: 'cta' | 'overBackground' | 'primary' | 'secondary' | 'negative';\n}\n\nexport const Default = (props: Properties): TemplateResult =>\n    renderButtonSet(props);\n\nexport const quiet = (props: Properties): TemplateResult =>\n    renderButtonSet(props);\nquiet.args = {\n    quiet: true,\n};\n\nexport const withIcon = (props: Properties): TemplateResult => {\n    return html`\n        <style>\n            .row {\n                padding: 10px;\n            }\n        </style>\n        <div class=\"row\">\n            ${renderButtonSet({\n                ...props,\n                content: html`\n                    <sp-icon-help slot=\"icon\"></sp-icon-help>\n                    Help\n                `,\n            })}\n        </div>\n        <div class=\"row\">\n            ${renderButtonSet({\n                ...props,\n                content: html`\n                    ${bellIcon} Custom SVG\n                `,\n            })}\n        </div>\n    `;\n};\n\nexport const iconSizeOverridden = (): TemplateResult => {\n    return html`\n        <sp-button label=\"Edit\" size=\"xl\" variant=${variant}>\n            <sp-icon-help slot=\"icon\" size=\"s\">Testing</sp-icon-help>\n        </sp-button>\n        <h1>For testing purposes only</h1>\n        <p>\n            This is a test to ensure that sizing the icon will still work when\n            it's in the scope of a parent element. You shouldn't normally do\n            this as it deviates from the Spectrum design specification.\n        </p>\n    `;\n};\n\nexport const minWidthButton = (props: Properties): TemplateResult => {\n    return html`\n        <style>\n            sp-button {\n                min-width: 300px;\n            }\n        </style>\n        ${renderButtonSet(props)}\n    `;\n};\nminWidthButton.story = {\n    name: 'min-width',\n};\n\nconst href = 'https://github.com/adobe/spectrum-web-components';\n\nexport const link = (props: Properties): TemplateResult =>\n    renderButtonSet({\n        ...props,\n        href,\n    });\nlink.story = {\n    name: 'href',\n};\n\nexport const linkWithTarget = (props: Properties): TemplateResult =>\n    renderButtonSet({\n        ...props,\n        href,\n        target: '_blank',\n    });\nlinkWithTarget.story = {\n    name: 'href with target=\"_blank\"',\n};\n"]}