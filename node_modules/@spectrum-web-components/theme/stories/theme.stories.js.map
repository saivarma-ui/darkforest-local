{"version":3,"file":"theme.stories.js","sourceRoot":"","sources":["theme.stories.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;EAUE;AACF,OAAO,gBAAgB,CAAC;AACxB,OAAO,kBAAkB,CAAC;AAC1B,OAAO,8CAA8C,CAAC;AACtD,OAAO,0DAA0D,CAAC;AAClE,OAAO,8CAA8C,CAAC;AACtD,OAAO,8CAA8C,CAAC;AACtD,OAAO,EAAE,IAAI,EAAkB,MAAM,+BAA+B,CAAC;AAGrE,eAAe;IACX,SAAS,EAAE,UAAU;IACrB,KAAK,EAAE,OAAO;IACd,QAAQ,EAAE;QACN,SAAS,EAAE;YACP,OAAO,EAAE;gBACL,IAAI,EAAE,cAAc;gBACpB,OAAO,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC;aAC7B;SACJ;KACJ;IACD,IAAI,EAAE;QACF,SAAS,EAAE,OAAO;KACrB;CACJ,CAAC;AAEF,MAAM,WAAW,GAAG,IAAI,CAAA;;;;;;;;;;;;;;;;;;;;;CAqBvB,CAAC;AAEF,MAAM,CAAC,MAAM,OAAO,GAAG,CAAC,EACpB,SAAS,EAAE,KAAK,GAGnB,EAAkB,EAAE;IACjB,OAAO,IAAI,CAAA;UACL,WAAW;2BACM,KAAK;;;;;;;;;;;;;;;;;;;KAmB3B,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,WAAW,GAAG,GAAmB,EAAE,CAAC,IAAI,CAAA;;;;;;;;;;;;;;;;;;CAkBpD,CAAC;AAEF,MAAM,CAAC,MAAM,IAAI,GAAG,GAAmB,EAAE,CAAC,IAAI,CAAA;MACxC,WAAW;;;;;;;;;;;;;;;;;;;CAmBhB,CAAC;AAEF,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,EACxB,SAAS,EAAE,KAAK,GAGnB,EAAkB,EAAE;IACjB,MAAM,KAAK,GAAG,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;IACnD,OAAO,IAAI,CAAA;UACL,WAAW;2BACM,KAAK;;;;;;;;;;;;;;;;;mCAiBG,KAAK;;;;;;;;;;;;;;;;;;;;;KAqBnC,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,uBAAuB,GAAG,CAAC,EACpC,SAAS,EAAE,KAAK,GAGnB,EAAkB,EAAE;IACjB,MAAM,KAAK,GAAG,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;IACnD,OAAO,IAAI,CAAA;;;;;;;;;;;;;;;;;;;;2BAoBY,KAAK;;;;;;;;;;;;;;;;;mCAiBG,KAAK;;;;;;;;;;;;;;;;;;;;;KAqBnC,CAAC;AACN,CAAC,CAAC","sourcesContent":["/*\nCopyright 2020 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\nimport '../sp-theme.js';\nimport '../src/themes.js';\nimport '@spectrum-web-components/button/sp-button.js';\nimport '@spectrum-web-components/button-group/sp-button-group.js';\nimport '@spectrum-web-components/switch/sp-switch.js';\nimport '@spectrum-web-components/slider/sp-slider.js';\nimport { html, TemplateResult } from '@spectrum-web-components/base';\nimport { Color } from '../src/index.js';\n\nexport default {\n    component: 'sp-theme',\n    title: 'Theme',\n    argTypes: {\n        colorStop: {\n            control: {\n                type: 'inline-radio',\n                options: ['light', 'dark'],\n            },\n        },\n    },\n    args: {\n        colorStop: 'light',\n    },\n};\n\nconst storyStyles = html`\n    <style type=\"text/css\">\n        #outer,\n        #example {\n            width: 500px;\n            padding: 3em;\n            background-color: var(--spectrum-global-color-gray-100);\n            color: var(--spectrum-global-color-gray-800);\n        }\n\n        #inner {\n            margin-top: 2em;\n            padding: 2em;\n            background-color: var(--spectrum-global-color-gray-100);\n            color: var(--spectrum-global-color-gray-800);\n        }\n\n        #buttons {\n            margin-top: 2em;\n        }\n    </style>\n`;\n\nexport const Default = ({\n    colorStop: color,\n}: {\n    colorStop: Color;\n}): TemplateResult => {\n    return html`\n        ${storyStyles}\n        <sp-theme color=\"${color}\">\n            <div id=\"example\">\n                <div>\n                    <sp-slider\n                        value=\"5\"\n                        step=\"1\"\n                        min=\"1\"\n                        max=\"11\"\n                        label=\"Volume\"\n                        id=\"volume-slider\"\n                    ></sp-slider>\n                </div>\n                <div><sp-switch>Overdrive</sp-switch></div>\n                <sp-button-group id=\"buttons\">\n                    <sp-button variant=\"primary\">Cancel</sp-button>\n                    <sp-button variant=\"cta\">Continue</sp-button>\n                </sp-button-group>\n            </div>\n        </sp-theme>\n    `;\n};\n\nexport const displayFlex = (): TemplateResult => html`\n    <style type=\"text/css\">\n        #flex-theme {\n            display: flex;\n            flex-direction: row;\n        }\n        #flex-theme sp-button {\n            flex: 0 0;\n        }\n        #flex-theme #middle-button {\n            flex: 1 0;\n        }\n    </style>\n    <sp-theme id=\"flex-theme\" color=\"dark\">\n        <sp-button>Start</sp-button>\n        <sp-button id=\"middle-button\">Middle</sp-button>\n        <sp-button>End</sp-button>\n    </sp-theme>\n`;\n\nexport const none = (): TemplateResult => html`\n    ${storyStyles}\n    <div id=\"example\">\n        <div>\n            <sp-slider\n                value=\"5\"\n                step=\"1\"\n                min=\"1\"\n                max=\"11\"\n                label=\"Volume\"\n                id=\"volume-slider\"\n            ></sp-slider>\n        </div>\n        <div><sp-switch>Overdrive</sp-switch></div>\n        <sp-button-group id=\"buttons\">\n            <sp-button variant=\"primary\">Cancel</sp-button>\n            <sp-button variant=\"cta\">Continue</sp-button>\n        </sp-button-group>\n    </div>\n    <sp-theme></sp-theme>\n`;\n\nexport const nestedTheme = ({\n    colorStop: outer,\n}: {\n    colorStop: Color;\n}): TemplateResult => {\n    const inner = outer === 'light' ? 'dark' : 'light';\n    return html`\n        ${storyStyles}\n        <sp-theme color=\"${outer}\">\n            <div id=\"outer\">\n                <div>\n                    <sp-slider\n                        value=\"5\"\n                        step=\"1\"\n                        min=\"1\"\n                        max=\"11\"\n                        label=\"Volume\"\n                        id=\"volume-slider\"\n                    ></sp-slider>\n                </div>\n                <div><sp-switch>Overdrive</sp-switch></div>\n                <sp-button-group id=\"buttons\">\n                    <sp-button variant=\"primary\">Cancel</sp-button>\n                    <sp-button variant=\"cta\">Continue</sp-button>\n                </sp-button-group>\n                <sp-theme color=\"${inner}\" dir=\"ltr\">\n                    <div id=\"inner\">\n                        <div>\n                            <sp-slider\n                                value=\"5\"\n                                step=\"1\"\n                                min=\"1\"\n                                max=\"11\"\n                                label=\"Volume\"\n                                id=\"volume-slider-inner\"\n                            ></sp-slider>\n                        </div>\n                        <div><sp-switch>Overdrive</sp-switch></div>\n                        <sp-button-group id=\"buttons-inner\">\n                            <sp-button variant=\"primary\">Cancel</sp-button>\n                            <sp-button variant=\"cta\">Continue</sp-button>\n                        </sp-button-group>\n                    </div>\n                </sp-theme>\n            </div>\n        </sp-theme>\n    `;\n};\n\nexport const reverseColorNestedTheme = ({\n    colorStop: outer,\n}: {\n    colorStop: Color;\n}): TemplateResult => {\n    const inner = outer === 'light' ? 'dark' : 'light';\n    return html`\n        <style type=\"text/css\">\n            #outer {\n                width: 500px;\n                padding: 3em;\n                background-color: var(--spectrum-global-color-gray-100);\n                color: var(--spectrum-global-color-gray-800);\n            }\n\n            #inner {\n                margin-top: 2em;\n                padding: 2em;\n                background-color: var(--spectrum-global-color-gray-100);\n                color: var(--spectrum-global-color-gray-800);\n            }\n\n            #buttons {\n                margin-top: 2em;\n            }\n        </style>\n        <sp-theme color=\"${inner}\">\n            <div id=\"outer\">\n                <div>\n                    <sp-slider\n                        value=\"5\"\n                        step=\"1\"\n                        min=\"1\"\n                        max=\"11\"\n                        label=\"Volume\"\n                        id=\"volume-slider\"\n                    ></sp-slider>\n                </div>\n                <div><sp-switch>Overdrive</sp-switch></div>\n                <sp-button-group id=\"buttons\">\n                    <sp-button variant=\"primary\">Cancel</sp-button>\n                    <sp-button variant=\"cta\">Continue</sp-button>\n                </sp-button-group>\n                <sp-theme color=\"${outer}\" dir=\"rtl\">\n                    <div id=\"inner\">\n                        <div>\n                            <sp-slider\n                                value=\"5\"\n                                step=\"1\"\n                                min=\"1\"\n                                max=\"11\"\n                                label=\"Volume\"\n                                id=\"volume-slider-inner\"\n                            ></sp-slider>\n                        </div>\n                        <div><sp-switch>Overdrive</sp-switch></div>\n                        <sp-button-group id=\"buttons-inner\">\n                            <sp-button variant=\"primary\">Cancel</sp-button>\n                            <sp-button variant=\"cta\">Continue</sp-button>\n                        </sp-button-group>\n                    </div>\n                </sp-theme>\n            </div>\n        </sp-theme>\n    `;\n};\n"]}