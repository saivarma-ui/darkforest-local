"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.asDate = asDate;
exports.isMultiline = isMultiline;
exports.indent = indent;
exports.INDENT = void 0;
// $FlowFixMe[unclear-type] - deliberate casting
// Two spaces of indentation
var INDENT = '  ';
/**
 * `x instanceof Date` checks are unreliable across stack frames (that information
 * might get lost by the JS runtime), so we'll have to reside to more runtime
 * inspection checks.
 *
 * Taken from https://stackoverflow.com/a/44198641
 */

exports.INDENT = INDENT;

var isDate = function isDate(value) {
  return !!value && // $FlowFixMe[method-unbinding]
  Object.prototype.toString.call(value) === '[object Date]' && !isNaN(value);
};
/**
 * Is value is a valid Date instance, then return that.  If not, then return
 * null.
 */


function asDate(value) {
  return isDate(value) ? value : null;
}

function isMultiline(s) {
  var linecount = s.split('\n').length;
  return linecount > 1;
}

function indent(s) {
  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : INDENT;

  if (isMultiline(s)) {
    return s.split('\n').map(function (line) {
      return prefix + line;
    }).join('\n');
  } else {
    return prefix + s;
  }
}